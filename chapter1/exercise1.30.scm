(define (sum term a next b)
  (define (iter a result)
    (if (> a b)
      result
      (iter (next a) (+ result (term a)))))
  (iter 0 0))           

(define (simpson f a b n)
  (define h (/ (- b a) n))
  (define (y k)
    (f (+ a (* k h))))
  (define (next k)
    (+ k 1))
  (define (term index)
    (cond ((= index 0) (y index))
          ((= index n) (y index))
          ((odd? index) (* 4 (y index)))
          (else (* 2 (y index)))))
  (* (/ h 3.0) 
     (sum term 0 next n)))
